[DEFAULT]
server.servicetype=jsonRPC
worker.servicetype=pbRPC
proxy.servicetype=jsonRPC
deploy.user=root
deploy.path=/%(deploy.user)s/nict/rasc/parser
repos.user=mtnk

[repository]
repos.workdir=repos_work
repos.rasc=https://github.com/nict-wisdom/rasc.git
repos.branch=master
repos.rasc.path=rasc
repos.clone=git clone %(repos.rasc)s ./%(repos.rasc.path)s
repos.pull=cd ./%(repos.rasc.path)s && git reset --hard HEAD && git pull && git checkout -f %(repos.branch)s
repos.clean=cd %(repos.rasc.path)s && git reset --hard HEAD && git checkout -f %(repos.branch)s
repos.target=%(repos.rasc.path)s
repos.build=%(repos.target)s/rasc_build
repos.deploy=%(repos.build)s/build/deploy

[sample.repository]
repos.sample=https://github.com/hiropppe/rasc-sample.git
repos.branch=master
repos.sample.root=rasc-sample
repos.clone=git clone %(repos.sample)s ./%(repos.sample.root)s
repos.pull=cd ./%(repos.sample.root)s && git reset --hard HEAD && git pull && git checkout -f %(repos.branch)s
repos.clean=cd %(repos.sample.root)s && git reset --hard HEAD && git checkout -f %(repos.branch)s
repos.sample.parser=parallel-parser
repos.target=%(repos.sample.root)s/%(repos.sample.parser)s
repos.build=%(repos.target)s/build
repos.deploy=%(repos.build)s/build/deploy

[deploy]
deploy.dummy=0

[jetty]
jetty.project=jp.go.nict.langrid.webapps.jetty.embedded
jetty.script=%(jetty.project)s/scripts
jetty.jar=%(jetty.project)s/jar/embeddedserver.jar

[servicetypes]
servicetypes={"jsonRPC" : { "servletname" : "jsonServices",
    "factory" : "jp.go.nict.langrid.client.jsonrpc.JsonRpcClientFactory" },
  "pbRPC" : { "servletname" : "pbServices",
    "factory" : "jp.go.nict.langrid.client.impl.protobuf.PbClientFactory" },
  "msgpackRPC" : { "servletname" : "None",
    "factory" : "jp.go.nict.langrid.client.msgpackrpc.MsgPackClientFactory" }}

[services]
servicesdef={ 
  "parserservice" : { "server" : {"path" : 'parser-server-webapp' , "name" : "ParserServer" } , 
    "worker" : {"path":'parser-worker-webapp' , "name" : "ParserWorker" } , "timeout" : 60000 , "rewriteEndpoint" : True ,
    "interface" : "jp.go.nict.rasc.parser.api.ParserService" , "msgpackPort" : 9011 } }

[workers]
workers={ "workers1" : { "host" : [("172.17.0.", 6, 7)] , "port" : 8080 , "services" : "all" } }
scripts.start=jp.go.nict.langrid.webapps.jetty.embedded/scripts/RunAllWorker/start_runallworkers.sh
scripts.stop=jp.go.nict.langrid.webapps.jetty.embedded/scripts/RunAllWorker/stop_runallworkers.sh
#patch.src="patch.txt"
worker.servicetype=msgpackRPC

[servers]
servers={ "server1" : { "host" : [("172.17.0.", 9, 9)] , "port" : 8080 , "workers" :  ["workers1"] , "services" : "all" } } 
scripts.start=jp.go.nict.langrid.webapps.jetty.embedded/scripts/RunAllServers/start_runallserver.sh
scripts.stop=jp.go.nict.langrid.webapps.jetty.embedded/scripts/RunAllServers/stop_runallserver.sh
server.servicetype=jsonRPC

[proxyserver]
proxy={ "host": [("172.17.0.", 8, 8)] ,"port" : 8080 }
scripts.start=jp.go.nict.langrid.webapps.jetty.embedded/scripts/start_proxy.sh
scripts.stop=jp.go.nict.langrid.webapps.jetty.embedded/scripts/stop_proxy.sh
target.project=jp.go.nict.ial.webapps.wisdom.proxyservice
proxy.servicetype=msgpackRPC

