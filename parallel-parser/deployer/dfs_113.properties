[DEFAULT]
server.servicetype=jsonRPC
worker.servicetype=pbRPC
proxy.servicetype=jsonRPC
deploy.user=hadoop
deploy.path=/home/%(deploy.user)s/nict/rasc/stdio 
repos.user=takeshita

[repository]
repos.workdir=repos_work/
repos.rasc=http://192.168.88.172:18080/gitbucket/git/takeshita/rasc.git
repos.branch=master
repos.rasc.path=rasc
repos.clone=git clone %(repos.rasc)s ./%(repos.rasc.path)s
repos.pull=cd ./%(repos.rasc.path)s && git reset --hard HEAD && git pull && git checkout -f %(repos.branch)s
repos.clean=cd %(repos.rasc.path)s && git reset --hard HEAD && git checkout -f %(repos.branch)s
repos.target=%(repos.rasc.path)s
repos.build=%(repos.target)s/rasc-stdio-build
repos.deploy=%(repos.build)s/build/deploy

[deploy]
deploy.dummy=0

[jetty]
jetty.project=jp.go.nict.langrid.webapps.jetty.embedded
jetty.script=%(jetty.project)s/scripts
jetty.jar=%(jetty.project)s/jar/embeddedserver.jar

[servicetypes]
servicetypes={"jsonRPC" : { "servletname" : "jsonServices",
    "factory" : "jp.go.nict.langrid.client.jsonrpc.JsonRpcClientFactory" },
  "pbRPC" : { "servletname" : "pbServices",
    "factory" : "jp.go.nict.langrid.client.impl.protobuf.PbClientFactory" },
  "msgpackRPC" : { "servletname" : "None",
    "factory" : "jp.go.nict.langrid.client.msgpackrpc.MsgPackClientFactory" }}

[services]
servicesdef={ 
  "stdioservice" : { "server" : {"path" : 'rasc-stdio-server-webapp' , "name" : "StdIOServer" } , 
    "worker" : {"path":'rasc-stdio-worker-webapp' , "name" : "StdIOWorker" } , "timeout" : 60000 , "rewriteEndpoint" : True ,
    "interface" : "jp.go.nict.rasc.stdio.api.StdIOService" , "msgpackPort" : 9011 } }

[workers]
workers={ "workers1" : { "host" : [("192.168.88.", 181, 183)] , "port" : 8080 , "services" : "all" } }
scripts.start=jp.go.nict.langrid.webapps.jetty.embedded/scripts/RunAllWorker/start_runallworkers.sh
scripts.stop=jp.go.nict.langrid.webapps.jetty.embedded/scripts/RunAllWorker/stop_runallworkers.sh
#patch.src="patch.txt"
worker.servicetype=msgpackRPC

[servers]
servers={ "server1" : { "host" : [("192.168.88.", 184, 184)] , "port" : 8080 , "workers" :  ["workers1"] , "services" : "all" } } 
scripts.start=jp.go.nict.langrid.webapps.jetty.embedded/scripts/RunAllServers/start_runallserver.sh
scripts.stop=jp.go.nict.langrid.webapps.jetty.embedded/scripts/RunAllServers/stop_runallserver.sh
server.servicetype=jsonRPC

[proxyserver]
proxy={ "host": [("192.168.88.", 185, 185)] ,"port" : 8080 }
scripts.start=jp.go.nict.langrid.webapps.jetty.embedded/scripts/start_proxy.sh
scripts.stop=jp.go.nict.langrid.webapps.jetty.embedded/scripts/stop_proxy.sh
target.project=jp.go.nict.ial.webapps.wisdom.proxyservice
proxy.servicetype=msgpackRPC

